@model IEnumerable<CondominiumCoOwnersSystem.Web.ViewModels.Reports.BuildingsOfUserViewModel>

@{
    this.ViewData["Title"] = "Information";
}

@if (!Model.Any())
{
    <div class="alert">
        Вие не сте добавили апартамент. Моля изберете от менюто Апартамент и добавате вашият апартамент.
        Веднага след това ще може да получите пълна информация за вашата сграда. Ако има проблем моля свържете се с нас
        <a asp-controller="Contacts" asp-action="Index">Контакт</a>.
    </div>
}
else
{
    <div class="alert alert-secondary info-message" role="alert">
        Моля изберете за коя сграда искате да видите информация или отчет.
    </div>

    <div class="building-info">
        @foreach (var building in Model)
        {
            <div class="card border border-success rounded-lg info-card" style="width: 20rem;">
                <div class="card-body">
                    <h5 class="card-title text-center">@building.Street</h5>
                    <h6 class="card-subtitle mb-2 text-muted text-center">Гр.@building.CityName</h6>
                    <p class="card-text">
                        Тук може да видите информация за обслужващите фирми, начин на разпределение на месечните такси, такса за фонд ремонт и обновление.
                        Също така с натискане на бутона Отчети, Вие може да видите отчетите за различните месеци и години.
                    </p>
                    <a class="btn btn-warning rounded-sm" asp-controller="Reports" asp-action="BuildingInfo" asp-route-buildingId="@building.Id">Информация</a>
                    <a class="btn btn-success rounded-sm float-lg-right report-btn" data="@building.Id">Отчети</a>
                </div>
            </div>
        }
    </div>
}

@section Scripts{
    <script>
        let buildings = document.getElementsByClassName('building-info')[0];
        let building_id = 0;

        buildings.addEventListener('click', (e) => {
            let curCardChild = Array.from(e.target.offsetParent.children);

            if (Array.from(e.target.classList).includes('report-btn') &&
                curCardChild.filter(x => x.localName === 'select').length === 0) {
                building_id = Number(Array.from(e.target.attributes).find(x => x.name === 'data').value);
                let areaToAppend = e.target.offsetParent;
                let selectArea = document.createElement('select');

                let date = new Date();
                const months = ["Януари", "Февруари", "Март", "Април", "Май", "Юни", "Юли", "Август", "Септември", "Октомври", "Ноември", "Декември"];
                let defaultOption = document.createElement('option');
                defaultOption.text = 'Изберете месец';
                selectArea.appendChild(defaultOption);

                for (var i = 0; i <= date.getMonth(); i++) {
                    let option = document.createElement('option');
                    option.value = i;
                    option.text = months[i];

                    selectArea.appendChild(option);
                }
                areaToAppend.appendChild(selectArea);

                selectArea.addEventListener('change', (e) => {
                    let selectedMonth = Number(e.target.value) + 1;
                    let a = building_id;
                    $.ajax({
                        url: "/Reports/Report",
                        type: "GET",
                        data: {
                            buildingId: a,
                            month: selectedMonth
                        },
                        contentType: 'application/html; charset=utf-8',
                        dataType: "html",
                        success: function (data) {
                            let body = document.getElementsByTagName('body')[0];
                            $(body).html(data);
                        }
                    });
                });
            }
        });
    </script>
}